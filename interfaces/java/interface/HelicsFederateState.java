/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.java.helics;

/**
 * enumeration of possible federate states
 */
public final class HelicsFederateState {
  public final static HelicsFederateState HELICS_STATE_UNKNOWN = new HelicsFederateState("HELICS_STATE_UNKNOWN", helicsJNI.HELICS_STATE_UNKNOWN_get());
  /**
   *  used when no information is available about the federate state when created the federate is in startup state 
   */
  public final static HelicsFederateState HELICS_STATE_STARTUP = new HelicsFederateState("HELICS_STATE_STARTUP", helicsJNI.HELICS_STATE_STARTUP_get());
  /**
   *  entered after the enterInitializingMode call has returned 
   */
  public final static HelicsFederateState HELICS_STATE_INITIALIZATION = new HelicsFederateState("HELICS_STATE_INITIALIZATION", helicsJNI.HELICS_STATE_INITIALIZATION_get());
  /**
   *  entered after the enterExectuationState call has returned 
   */
  public final static HelicsFederateState HELICS_STATE_EXECUTION = new HelicsFederateState("HELICS_STATE_EXECUTION", helicsJNI.HELICS_STATE_EXECUTION_get());
  /**
   *  the federate has finished executing normally final values may be retrieved 
   */
  public final static HelicsFederateState HELICS_STATE_FINALIZE = new HelicsFederateState("HELICS_STATE_FINALIZE", helicsJNI.HELICS_STATE_FINALIZE_get());
  /**
   *  error state no core communication is possible but values can be retrieved 
   */
  public final static HelicsFederateState HELICS_STATE_ERROR = new HelicsFederateState("HELICS_STATE_ERROR", helicsJNI.HELICS_STATE_ERROR_get());
  /**
   *  indicator that the federate is pending entry to initialization state 
   */
  public final static HelicsFederateState HELICS_STATE_PENDING_INIT = new HelicsFederateState("HELICS_STATE_PENDING_INIT", helicsJNI.HELICS_STATE_PENDING_INIT_get());
  /**
   *  state pending EnterExecution State 
   */
  public final static HelicsFederateState HELICS_STATE_PENDING_EXEC = new HelicsFederateState("HELICS_STATE_PENDING_EXEC", helicsJNI.HELICS_STATE_PENDING_EXEC_get());
  /**
   *  state that the federate is pending a timeRequest 
   */
  public final static HelicsFederateState HELICS_STATE_PENDING_TIME = new HelicsFederateState("HELICS_STATE_PENDING_TIME", helicsJNI.HELICS_STATE_PENDING_TIME_get());
  /**
   *  state that the federate is pending an iterative time request 
   */
  public final static HelicsFederateState HELICS_STATE_PENDING_ITERATIVE_TIME = new HelicsFederateState("HELICS_STATE_PENDING_ITERATIVE_TIME", helicsJNI.HELICS_STATE_PENDING_ITERATIVE_TIME_get());
  /**
   *  state that the federate is pending a finalize request 
   */
  public final static HelicsFederateState HELICS_STATE_PENDING_FINALIZE = new HelicsFederateState("HELICS_STATE_PENDING_FINALIZE", helicsJNI.HELICS_STATE_PENDING_FINALIZE_get());
  /**
   *  state that the federate is finished simulating but still connected 
   */
  public final static HelicsFederateState HELICS_STATE_FINISHED = new HelicsFederateState("HELICS_STATE_FINISHED", helicsJNI.HELICS_STATE_FINISHED_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static HelicsFederateState swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + HelicsFederateState.class + " with value " + swigValue);
  }

  private HelicsFederateState(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private HelicsFederateState(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private HelicsFederateState(String swigName, HelicsFederateState swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static HelicsFederateState[] swigValues = { HELICS_STATE_UNKNOWN, HELICS_STATE_STARTUP, HELICS_STATE_INITIALIZATION, HELICS_STATE_EXECUTION, HELICS_STATE_FINALIZE, HELICS_STATE_ERROR, HELICS_STATE_PENDING_INIT, HELICS_STATE_PENDING_EXEC, HELICS_STATE_PENDING_TIME, HELICS_STATE_PENDING_ITERATIVE_TIME, HELICS_STATE_PENDING_FINALIZE, HELICS_STATE_FINISHED };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

