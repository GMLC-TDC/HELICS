# Copyright (c) 2017-2018,
# Battelle Memorial Institute; Lawrence Livermore National Security, LLC; Alliance for Sustainable Energy, LLC
# All rights reserved. See LICENSE file and DISCLAIMER for more details.

import subprocess
import shlex

import os
from distutils.core import setup, Extension

import platform

VERSION = os.getenv("PYHELICS_PACKAGE_VERSION", '${HELICS_VERSION_MAJOR}.${HELICS_VERSION_MINOR}.${HELICS_VERSION_PATCH}')

if 'HELICS_VERSION_MAJOR' in VERSION:
    print("Unable to find PYHELICS_PACKAGE_VERSION environment variable. Please check the documentation or contact the developers.")
    import sys
    sys.exit(1)

if platform.system() == 'Darwin':
    os_specific_cflags = ''
    os_specific_ldflags = '' # '-shared'
    extra_compile_args = []
else:
    os_specific_cflags = ''
    os_specific_ldflags = ''
    extra_compile_args = ['-std=c++11']

HELICS_INSTALL = os.path.abspath(os.getenv("HELICS_INSTALL", '${PROJECT_BINARY_DIR}'))
HELICS_INCLUDE_DIR = os.path.abspath(os.getenv("HELICS_INCLUDE", os.path.join(HELICS_INSTALL, "${PROJECT_BINARY_DIR}/src/")))
helics_src_path = os.path.join(HELICS_INCLUDE_DIR, "${PROJECT_SOURCE_DIR}/src")
HELICS_CFLAGS = os.getenv("HELICS_CFLAGS", "-I{} -I{}".format(os.path.abspath(os.path.join(helics_src_path, "helics")), os.path.abspath(os.path.join(helics_src_path, "helics/shared_api_library"))))
HELICS_LIB_DIR = os.path.abspath(os.getenv("HELICS_LIB", "${PROJECT_BINARY_DIR}/src/"))
HELICS_LDFLAGS = os.getenv("HELICS_LDFLAGS", "-L{}".format(os.path.abspath(os.path.join(HELICS_INCLUDE_DIR, "helics/shared_api_library"))))
HELICS_LIBS = os.getenv("HELICS_LIBS", "")
ZMQ_INCLUDE_DIR = os.path.abspath(os.getenv("ZMQ_INCLUDE", "${ZMQ_INCLUDE_DIR}"))
ZMQ_LIB_DIR = os.path.abspath(os.getenv("ZMQ_LIB", "${ZMQ_LIB_DIR}"))

if HELICS_INSTALL is None or "CMAKE_INSTALL_PREFIX" in HELICS_INSTALL:

    print("Unable to find HELICS_INSTALL environment variable. Please check the documentation or contact the developers.")
    import sys
    sys.exit(1)

os.environ['CFLAGS'] = '-Wall -I"{}" -I"{}" -I"{}" -I"{}" {HELICS_CFLAGS} -fPIC {os_specific_cflags}'.format(
    HELICS_INCLUDE_DIR,
    os.path.join(HELICS_INCLUDE_DIR, 'helics'),
    os.path.join(HELICS_INCLUDE_DIR, 'helics/shared_api_library'),
    ZMQ_INCLUDE_DIR,
    HELICS_CFLAGS=HELICS_CFLAGS,
    os_specific_cflags=os_specific_cflags,
)

os.environ['LDFLAGS'] = '{} {} {} -L"{}" -L"{}" {}'.format(os_specific_ldflags, "${PYTHON_ZMQ_LINK_FLAG}", HELICS_LIBS, HELICS_LIB_DIR, ZMQ_LIB_DIR, HELICS_LDFLAGS)
helics_module = Extension(
    "_helics",
    sources=[
        "helics_wrap.c",
    ],
    libraries=[
        "helicsSharedLib",
    ],
    extra_compile_args=extra_compile_args,
)

setup(
    name='helics',
    version=VERSION,
    author="Dheepak Krishnamurthy",
    ext_modules=[helics_module],
    py_modules=["helics"],
)
