jobs:
- job: Windows
  strategy:
    matrix:
      VS2015-64bit:
        imageName: "vs2015-win2012r2"
        vsArch: "x64"
      VS2017-64bit:
        imageName: "vs2017-win2016"
        vsArch: "x64"
      VS2019-64bit:
        imageName: "windows-2019"
        vsArch: "x64"
  pool:
    vmImage: $(imageName)

  steps:
  # -----------------------
  # Install dependencies
  # -----------------------
  - powershell: |
      Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      echo "##vso[task.prependpath]C:\ProgramData\chocolatey\bin"
      choco install boost-msvc-14.1 --yes --limit-output
    condition: eq( variables['imageName'], 'vs2015-win2012r2' )
    displayName: Install chocolatey and boost
    
  - bash: choco install swig --yes --limit-output
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: Install swig
    
  - bash: pip3 install pytest
    condition: ne( variables['imageName'], 'vs2015-win2012r2' )
    displayName: Install pytest
    
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.4' 
    condition: ne( variables['imageName'], 'vs2015-win2012r2' )

  # -----------------------
  # Configure HELICS
  # -----------------------
  - task: CMake@1
    inputs:
      cmakeArgs: -Ax64 -DCMAKE_BUILD_TYPE=Release -DENABLE_SWIG=ON -DBUILD_SHARED_LIBS=ON -DBUILD_JAVA_INTERFACE=ON -DBUILD_HELICS_BOOST_TESTS=OFF ..
    displayName: 'Configure HELICS'
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    
  - task: CMake@1
    inputs:
      cmakeArgs: -DBUILD_PYTHON_INTERFACE=ON HELICS_USE_NEW_PYTHON_FIND=ON -DENABLE_PACKAGE_BUILD=ON .
    displayName: 'Configure Python interface and package build (requires CMake 3.13+)'
    condition: ne( variables['imageName'], 'vs2015-win2012r2' )

  # -----------------------
  # Build HELICS
  # -----------------------
  - bash: cmake --build . --config Release
    displayName: 'Build HELICS'
    workingDirectory: build
    
  # -----------------------
  # Package HELICS
  # -----------------------
  - bash: |
      cpack_dir="$(which cmake)"
      cpack_dir="${cpack_dir%/cmake}"
      "${cpack_dir}/cpack" -C Release -B "$PWD/installer-output"
    displayName: 'Package HELICS'
    workingDirectory: build
    condition: ne( variables['imageName'], 'vs2015-win2012r2' )
    
  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/build/installer-output'
      contents: '*.exe'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    condition: ne( variables['imageName'], 'vs2015-win2012r2' )
      
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: installer
    condition: ne( variables['imageName'], 'vs2015-win2012r2' )
    
  # -----------------------
  # Test HELICS
  # -----------------------
  - bash: ctest --output-on-failure --timeout 480 -C Release -L "Continuous|PackagingFast"
    displayName: 'Test HELICS'
    workingDirectory: build
