# HELICS cmake module
# This module sets the following variables in your project::
#
#   HELICS_FOUND - true if HELICS found on the system
#   HELICS_INCLUDE_DIR - the directory containing HELICS headers for the C shared library if available
#   HELICS_C_SHARED_LIBRARY - the C shared library
# 	HELICS_CXX_SHARED_LIBRARY -the C++ shared library
#   It also creates the following targets if they are available (not all are always built depending on the configuration)
#   HELICS::helicsSharedLib for the C based shared library
#   HELICS::helics-shared for C++ based shared libary
#   HELICS::cpp98 for the C++98 header only library wrapper for the C shared library
#   HELICS::helics_player is an execuable target for the HELICS player
#   HELICS::helics_broker is an executable target for the helics broker executable
#   HELICS::helics_recorder is an executable target for the helics_recorder executable
#   HELICS::helics_app is an executable target for the helics_app executable
#   HELICS::helics_broker_server is an executable target for the helics_broker_server executable
#   HELICS::helics-config is a an executable target for the helics-config application

@PACKAGE_INIT@

set(PN HELICS)
set(SAVED_PARENT_CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH})
set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

include(CMakeFindDependencyMacro)

include(${CMAKE_CURRENT_LIST_DIR}/helics-targets.cmake)

if (NOT @HELICS_DISABLE_C_SHARED_LIB@)
    get_target_property(${PN}_C_SHARED_LIBRARY HELICS::helicsSharedLib LOCATION)
endif()

if (@HELICS_BUILD_CXX_SHARED_LIB@)
    get_target_property(${PN}_CXX_SHARED_LIBRARY HELICS::helics-shared LOCATION)
    if (EXISTS ${CMAKE_CURRENT_LIST_DIR}/include/helics_cxx)
        set_property(TARGET HELICS::helics-shared APPEND PROPERTY
            INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_LIST_DIR}/include/helics_cxx"
        )
		get_target_property(cxx_include_dirs HELICS::helics-shared INTERFACE_INCLUDE_DIRECTORIES)
		list(REMOVE_ITEM cxx_include_dirs "/helics_cxx")
		set_property(TARGET HELICS::helics-shared PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${cxx_include_dirs})
		if (@HELICS_BUILD_APP_LIBRARY@)
		    set_property(TARGET HELICS::helics-apps-shared APPEND PROPERTY
               INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_LIST_DIR}/include/helics_cxx"
            )
		    get_target_property(cxx_include_dirs HELICS::helics-apps-shared INTERFACE_INCLUDE_DIRECTORIES)
		    list(REMOVE_ITEM cxx_include_dirs "/helics_cxx")
		    set_property(TARGET HELICS::helics-apps-shared PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${cxx_include_dirs})
		endif()
    endif()
    
endif()

if (NOT @HELICS_DISABLE_C_SHARED_LIB@)
	get_target_property(${PN}_INCLUDE_DIRS HELICS::helicsSharedLib INTERFACE_INCLUDE_DIRECTORIES)
	message(STATUS "HELICS_INCLUDE DIR HELICS: ${HELICS_INCLUDE_DIR}")
    message(STATUS "HELICS_C_SHARED_LIBRARY: ${HELICS_C_SHARED_LIBRARY}")
endif()

check_required_components(${PN})

set(CMAKE_MODULE_PATH ${SAVED_PARENT_CMAKE_MODULE_PATH})
