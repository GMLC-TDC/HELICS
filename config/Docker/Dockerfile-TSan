FROM ubuntu:19.10 as builder

RUN apt update && apt install -y \
  python3 \
  make clang cmake git wget subversion

WORKDIR /root/develop

RUN svn co http://llvm.org/svn/llvm-project/llvm/trunk llvm
RUN (cd llvm/projects && svn co http://llvm.org/svn/llvm-project/libcxx/trunk libcxx)
RUN (cd llvm/projects && svn co http://llvm.org/svn/llvm-project/libcxxabi/trunk libcxxabi)

# Sets the number of threads for make to use
ARG MAKE_PARALLEL

RUN  mkdir libcxx_tsan_build && cd libcxx_tsan_build &&  cmake ../llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_USE_SANITIZER=Thread -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
RUN cd libcxx_tsan_build && make cxx -j${MAKE_PARALLEL:-2}

RUN mkdir -p /root/develop/libcxx_tsan/include && cp -r /root/develop/libcxx_tsan_build/include/* /root/develop/libcxx_tsan/include/
RUN mkdir -p /root/develop/libcxx_tsan/lib && cp -r /root/develop/libcxx_tsan_build/lib/* /root/develop/libcxx_tsan/lib/

FROM ubuntu:19.10

RUN apt update && apt install -y \
  libboost-dev \
  clang cmake make git && apt-get clean && ln -s /usr/bin/llvm-symbolizer-9 /usr/bin/llvm-symbolizer

#copy the built libraries from the builder images
COPY --from=builder /root/develop/libcxx_tsan /root/develop/libcxx_tsan

# copy script to build and run HELICS
COPY helics_build_run_tsan.sh /root/develop/helics_build_run_tsan.sh

ENV TSAN_CFLAGS="-fsanitize=thread -stdlib=libc++ -L/root/develop/libcxx_tsan/lib -lc++abi -I/root/develop/libcxx_tsan/include -I/root/develop/libcxx_tsan/include/c++/v1 -Wno-unused-command-line-argument -g -O1 -Wl,-rpath=/root/develop/libcxx_tsan/lib"
