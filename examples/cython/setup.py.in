# Copyright Â© 2017-2018,
# Battelle Memorial Institute; Lawrence Livermore National Security, LLC; Alliance for Sustainable Energy, LLC
# All rights reserved. See LICENSE file and DISCLAIMER for more details.


import os
from distutils.core import setup, Extension
from Cython.Build import cythonize
import platform

if platform.system() == 'Darwin':
    os_specific_cflags = '-stdlib=libc++'
    os_specific_ldflags = ''  # '-shared'
else:
    os_specific_cflags = ''
    os_specific_ldflags = '-shared'


HELICS_INSTALL = os.getenv("HELICS_INSTALL", '${CMAKE_INSTALL_PREFIX}')

if HELICS_INSTALL is None:

    print("Unable to find HELICS_INSTALL environment variable. Please check the documentation or contact the developers.")
    import sys
    sys.exit()


lib_dir_name = os.path.abspath(os.path.join(HELICS_INSTALL, 'lib'))
include_dir_name = os.path.abspath(os.path.join(HELICS_INSTALL, 'include'))

os.environ['CFLAGS'] = '-Wall -I"{}" -I"{}" -fPIC {os_specific_cflags} -std=c++14'.format(
    include_dir_name,
    os.path.join(include_dir_name, 'helics'),
    os_specific_cflags=os_specific_cflags,
)

os.environ['LDFLAGS'] = '{} -lzmq -L"{}"'.format(os_specific_ldflags, lib_dir_name)

extensions = [Extension("helics",
                        sources=["helics.pyx"],
                        libraries=["helics"],
                        language='c++'
                        )]

setup(name='helics', version='${PYHELICS_PACKAGE_VERSION}', ext_modules=cythonize(
    extensions, gdb_debug=True
))

