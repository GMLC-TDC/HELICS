//this should be a valid json file (except comments are not recognized in standard JSON
{ //example json configuration file for a value federate all arguments are optional
"name":"fedName", // the name of the federate
//possible flags
"observer":false,  // indicator that the federate does not send anything
"rollback": false, // indicator that the federate can use rollback -NOTE: not used at present
"only_update_on_change":false, //indicator that the federate should only indicate updated values on change
"only_transmit_on_change":false,  //indicator that the federate should only publish if the value changed
"source_only":false,  //indicator that the federate is only a source and is not expected to receive anything
"uninterruptible":false, //indicator that the federate should only return requested times
"coreType":"zmq", //the type of the core "test","zmq","udp","icp","tcp","mpi"
"coreName":"the name of the core",  //this matters most for icp and test cores, can be empty
"coreInit":"2", // the initialization string for the core in the form of a command line arguments
"maxIterations":10, //the maximum number of iterations for a time step
"period":  1.0, //the period with which federate may return time
"offset": 0.0, // the offset shift in the period
"timeDelta":0.0, // the minimum time between subsequent return times
"lookAhead":0, //the propagation delay for federates to send data
"impactWindow":0, //the input delay for external data to propagate to federates

"publications":[
{
"key":"pub1", // the name of the publication
 "type":"double", // the type assocaited with a publication (optional)
 "unit":"m",  // the units associated with a publication (optional)
 "global":false //set to true to make the key global (default is false in which case the publication is prepended with the federate name)
},
{
"key":"pub2", // the name of the publication
 "type":"double", // the type assocaited with a publication (optional)
}
]

}
