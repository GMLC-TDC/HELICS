language: cpp
dist: trusty

cache:
  ccache: true
  directories:
    - dependencies
    - build/libs
    - $HOME/AppData/Local/Temp/chocolatey
    - /c/tools/msys64

before_cache:
  - ${TRAVIS_BUILD_DIR}/scripts/cleanup-cmake.sh
  - |
    case $TRAVIS_OS_NAME in
      windows)
        $SHELL_CMD pacman --sync --clean --noconfirm
        ;;
    esac

env:
  global:
    - MAKEFLAGS="-j 4"
    - CMAKE_GENERATOR="Unix Makefiles"

# Create aliases for some of shared build configuration
_basic_env:
  - &daily_linux
    if: type = cron
    os: linux
    compiler: gcc
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-6
          - valgrind
          - lcov
          - libzmq3-dev

jobs:
  # On weekdays, the backlog for waiting OS X builds is huge
  fast_finish: true

  include:
    - os: Linux
      name: 'Default nothing job'
      before-install: echo 'Before Install'
      install: echo 'Install'
      script: echo 'Script'

    # ------------------------------------------------
    # Jobs for daily valgrind and code coverage tests
    # ------------------------------------------------
    # Valgrind build
    - <<: *daily_linux
      name: 'GCC 6 Valgrind'
      env:
        - MATRIX_EVAL="COMPILER=gcc && CC=gcc-6 && CXX=g++-6"
        - USE_SWIG=true
        - RUN_VALGRIND=true
        - DISABLE_INTERFACES="Java"
        - BUILD_TYPE=RelWithDebInfo
    # Code coverage build
    - <<: *daily_linux
      if: (type = cron) OR (branch =~ /(codecov)/) OR (commit_message =~ /(codecov)/)
      name: 'GCC 6 Code Coverage'
      env:
        - MATRIX_EVAL="COMPILER=gcc && CC=gcc-6 && CXX=g++-6"
        - USE_SWIG=true
        - TEST_TYPE=Coverage
        - BUILD_TYPE=Coverage
        - DISABLE_INTERFACES="Java"
        - GCOV_TOOL=gcov-6
        - USE_MPI=mpich
        - CTEST_VERBOSE=true

branches:
  except:
    - gh-pages

before_install:
  - eval "${MATRIX_EVAL}"
  - $CXX --version

install:
  - source scripts/install-ci-dependencies.sh
  - source scripts/setup-helics-ci-options.sh
  - export CMAKE_COMPILER_LAUNCHER="-DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache"

script:
  - mkdir -p build && cd build
  - $SHELL_CMD ../scripts/ci-build.sh

  # Setup counters for coverage
  - if [[ "$BUILD_TYPE" == "Coverage" ]]; then pushd .. && scripts/lcov-helper.sh setup-counters && popd ; fi

  - if [[ "TRAVIS_OS_NAME" == "osx" ]]; then python ../scripts/fix_install_names.py ; fi
  - if [[ "TRAVIS_OS_NAME" == "osx" ]]; then make ${MAKEFLAGS} install ; fi

  # Run CI tests
  - export CTEST_OPTIONS="--output-on-failure"
  - |
    if [[ "$SKIP_TEST_RUN" != "true" ]]; then
      echo "travis_wait ../scripts/run-ci-tests.sh ${CI_TEST_FLAGS}"
      travis_wait $SHELL_CMD ../scripts/run-ci-tests.sh ${CI_TEST_FLAGS}
    fi

  # Gather coverage results
  - if [[ "$BUILD_TYPE" == "Coverage" ]]; then pushd .. && scripts/lcov-helper.sh gather-coverage-info --gcov ${GCOV_TOOL} --codecov && popd ; fi

  # Create an installer using CPack (not supported on builds using custom SHELL_CMD)
  - if [[ "$ENABLE_CPACK" ]]; then cpack -G STGZ -B $(pwd)/cpack-output ; fi

notifications:
  email: false
